/**
 * DO NOT EDIT THIS FILE DIRECTLY
 * Head over to utils/shopify.js to create your webhooks
 *  and write your webhook functions in server/webhooks.
 * If you don't know the format, use the `createwebhook` snippet when using VSCode
 *  to get a boilerplate function for webhooks.
 * To update this file, run `npm run update:config` or `bun run update:config`
 */

import appUninstallHandler from "./app_uninstalled.js";
import shopify from "../../utils/shopify.js";

const webhookHandler = async (req, res) => {
  const topic = req.headers["x-shopify-topic"] || "";
  const shop = req.headers["x-shopify-shop-domain"] || "";
  const apiVersion = req.headers["x-shopify-api-version"] || "";
  const webhookId = req.headers["x-shopify-webhook-id"] || "";

  try {
    const validateWebhook = await shopify.webhooks.validate({
      rawBody: req.body,
      rawRequest: req,
      rawResponse: res,
    });

    if (validateWebhook.valid) {
    } else {
      return res.status(400).send({ error: true });
    }

    //SWITCHCASE
    switch (validateWebhook.topic) {
      case "APP_UNINSTALLED":
        appUninstallHandler(topic, shop, req.body, webhookId, apiVersion);
        break;
      default:
        throw new Error(`Can't find a handler for ${topic}`);
    }
    //SWITCHCASE END
    console.log(`--> Processed ${topic} webhook for ${shop}`);
    return res.status(200).send({ message: "ok" });
  } catch (e) {
    console.error(
      `---> Error while registering ${topic} webhook for ${shop}`,
      e
    );
    if (!res.headersSent) {
      return res.status(500).send(e.message);
    }
  }
};

export default webhookHandler;
